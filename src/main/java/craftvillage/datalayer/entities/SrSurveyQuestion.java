package craftvillage.datalayer.entities;
// Generated Mar 10, 2020 9:28:01 AM by Hibernate Tools 4.3.5.Final

import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import craftvillage.corelayer.utilities.ConstantParameter;

/**
 * SrSurveyQuestion generated by hbm2java
 */
@Entity
@Table(name = "SR_SURVEY_QUESTION", schema = ConstantParameter._SCHEMA_NAME)
public class SrSurveyQuestion implements java.io.Serializable {

  private int id;
  private String questionContent;
  private String questionType;
  private String questionLabel;
  private int active;
  private Set<SrSurveyQuestionAnswer> srSurveyQuestionAnswers;

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
  public int getId() {
    return this.id;
  }

  public void setId(int id) {
    this.id = id;
  }

  @Column(name = "QUESTION_CONTENT", length = 200)
  public String getQuestionContent() {
    return this.questionContent;
  }

  public void setQuestionContent(String questionContent) {
    this.questionContent = questionContent;
  }

  @Column(name = "QUESTION_TYPE", length = 200)
  public String getQuestionType() {
    return this.questionType;
  }

  public void setQuestionType(String questionType) {
    this.questionType = questionType;
  }

  @Column(name = "QUESTION_LABEL", length = 40)
  public String getquestionLabel() {
    return questionLabel;
  }

  public void setquestionLabel(String questionLabel) {
    this.questionLabel = questionLabel;
  }

  @Column(name = "ACTIVE", columnDefinition = "integer default 1")
  public int isActive() {
    return active;
  }

  public void setActive(int active) {
    this.active = active;
  }

  @OrderBy("id ASC")
  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "srSurveyQuestion")
  public Set<SrSurveyQuestionAnswer> getSrSurveyQuestionAnswers() {
    return this.srSurveyQuestionAnswers;
  }

  public void setSrSurveyQuestionAnswers(Set<SrSurveyQuestionAnswer> srSurveyQuestionAnswers) {
    this.srSurveyQuestionAnswers = srSurveyQuestionAnswers;
  }
}
