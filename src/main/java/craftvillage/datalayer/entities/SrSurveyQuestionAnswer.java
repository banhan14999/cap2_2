package craftvillage.datalayer.entities;
// Generated Mar 10, 2020 9:28:01 AM by Hibernate Tools 4.3.5.Final

import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import craftvillage.corelayer.utilities.ConstantParameter;

/**
 * SrSurveyQuestionAnswer generated by hbm2java
 */
@Entity
@Table(name = "SR_SURVEY_QUESTION_ANSWER", schema = ConstantParameter._SCHEMA_NAME)
public class SrSurveyQuestionAnswer implements java.io.Serializable {

  private int id;
  private SrSurveyQuestion srSurveyQuestion;
  private String answerContent;
  private Double indicate;
  private String answerType;
  private Set<HouseholdSurvey> householdSurveys;

  public SrSurveyQuestionAnswer() {}

  public SrSurveyQuestionAnswer(int id) {
    this.id = id;
  }

  public SrSurveyQuestionAnswer(int id, SrSurveyQuestion srSurveyQuestion, String answerContent,
      Double indicate, String answerType) {
    this.id = id;
    this.srSurveyQuestion = srSurveyQuestion;
    this.answerContent = answerContent;
    this.indicate = indicate;
    this.answerType = answerType;
  }

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
  public int getId() {
    return this.id;
  }

  public void setId(int id) {
    this.id = id;
  }

  @JsonBackReference
  @ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
  @JoinColumn(name = "SR_SQ_ID")
  public SrSurveyQuestion getSrSurveyQuestion() {
    return this.srSurveyQuestion;
  }

  public void setSrSurveyQuestion(SrSurveyQuestion srSurveyQuestion) {
    this.srSurveyQuestion = srSurveyQuestion;
  }

  @Column(name = "ANSWER_CONTENT", length = 100)
  public String getAnswerContent() {
    return this.answerContent;
  }

  public void setAnswerContent(String answerContent) {
    this.answerContent = answerContent;
  }

  @Column(name = "INDICATE", precision = 126, scale = 0)
  public Double getIndicate() {
    return this.indicate;
  }

  public void setIndicate(Double indicate) {
    this.indicate = indicate;
  }

  @Column(name = "ANSWER_TYPE", length = 40)
  public String getAnswerType() {
    return this.answerType;
  }

  public void setAnswerType(String answerType) {
    this.answerType = answerType;
  }

  @JsonIgnore
  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "srSurveyQuestionAnswer")
  public Set<HouseholdSurvey> getHouseholdSurveys() {
    return householdSurveys;
  }

  public void setHouseholdSurveys(Set<HouseholdSurvey> householdSurveys) {
    this.householdSurveys = householdSurveys;
  }

}
